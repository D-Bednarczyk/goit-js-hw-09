{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAASC,SAASC,cAAc,SAWtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAAeF,EAAQ,CAAEH,WAAUC,UAClCG,EAAO,CAAEJ,WAAUC,S,GACvBA,E,IAfPL,EAAOa,iBAAiB,SAGxB,SAAqBC,GACnB,IAEuBC,EAAnBD,EAAME,cADRC,SAAiBF,EAALV,MAAWU,EAAJG,KAAYH,EAANI,M,IAJ7BnB,EAAOa,iBAAiB,UA0BxB,SAAsBC,GACpBA,EAAMM,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIrB,EAAOiB,SAASE,OAAOG,MAAOD,IAMhDlB,EACEkB,EACAE,OAAOvB,EAAOiB,SAASZ,MAAMiB,OAC3BC,OAAOvB,EAAOiB,SAASC,KAAKI,OAASD,GAEtCG,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,EAAA5B,GAAS6B,OAAOC,QACd,qBAAwCC,OAAnBzB,EAAW,EAAE,QAAYyB,OAANxB,EAAM,M,IAGjDyB,OAAM,SAAAL,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAClBqB,EAAA5B,GAAS6B,OAAOI,QACd,oBAAuCF,OAAnBzB,EAAW,EAAE,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst ElForm = document.querySelector('.form');\n\nElForm.addEventListener('input', handleInput);\nElForm.addEventListener('submit', handleSubmit);\n\nfunction handleInput(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n}\n\n/* createPromise(2, 4500)\n  .then(({ position, delay }) => {\n    console.log(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`Rejected promise ${position} in ${delay}ms`);\n  }); */\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  for (let i = 0; i < ElForm.elements.amount.value; i++) {\n    /*   console.log(\n      i,\n      Number(ElForm.elements.delay.value) +\n        Number(ElForm.elements.step.value) * i\n    ); */\n    createPromise(\n      i,\n      Number(ElForm.elements.delay.value) +\n        Number(ElForm.elements.step.value) * i\n    )\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n  //console.log(ElForm.elements.step.value);\n  //console.log(ElForm.elements.step.value);\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$ElForm","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","_elements","currentTarget","elements","step","amount","preventDefault","i","value","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.dfcb5e1b.js.map"}