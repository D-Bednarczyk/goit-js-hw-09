{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAASC,SAASC,cAAc,SAWtC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EAAeF,EAAQ,C,SAAEH,E,MAAUC,IAClCG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAC/BA,EAAM,G,CAfbL,EAAOa,iBAAiB,SAGxB,SAAqBC,GACnB,MACEC,UAAUV,MAAEA,EAAKW,KAAEA,EAAIC,OAAEA,IACvBH,EAAMI,a,IALZlB,EAAOa,iBAAiB,UA0BxB,SAAsBC,GACpBA,EAAMK,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIpB,EAAOe,SAASE,OAAOI,MAAOD,IAMhDjB,EACEiB,EACAE,OAAOtB,EAAOe,SAASV,MAAMgB,OAC3BC,OAAOtB,EAAOe,SAASC,KAAKK,OAASD,GAEtCG,MAAK,EAACnB,SAAEA,EAAQC,MAAEA,MACjBmB,EAAA1B,GAAS2B,OAAOC,QACd,qBAAqBtB,EAAW,QAAQC,MACzC,IAEFsB,OAAM,EAACvB,SAAEA,EAAQC,MAAEA,MAClBmB,EAAA1B,GAAS2B,OAAOG,QACd,oBAAoBxB,EAAW,QAAQC,MACxC,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst ElForm = document.querySelector('.form');\n\nElForm.addEventListener('input', handleInput);\nElForm.addEventListener('submit', handleSubmit);\n\nfunction handleInput(event) {\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) resolve({ position, delay });\n      else reject({ position, delay });\n    }, delay);\n  });\n}\n\n/* createPromise(2, 4500)\n  .then(({ position, delay }) => {\n    console.log(`Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`Rejected promise ${position} in ${delay}ms`);\n  }); */\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  for (let i = 0; i < ElForm.elements.amount.value; i++) {\n    /*   console.log(\n      i,\n      Number(ElForm.elements.delay.value) +\n        Number(ElForm.elements.step.value) * i\n    ); */\n    createPromise(\n      i,\n      Number(ElForm.elements.delay.value) +\n        Number(ElForm.elements.step.value) * i\n    )\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n  //console.log(ElForm.elements.step.value);\n  //console.log(ElForm.elements.step.value);\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$ElForm","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","elements","step","amount","currentTarget","preventDefault","i","value","Number","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.40e1dcc1.js.map"}